name: Publish Packages

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

    workflow_dispatch:
        inputs:
            command:
                description: "Command"
                default: "[Publish Packages][All]"

jobs:
    build-on-ubuntu:
        runs-on: ubuntu-latest
        environment: Publish Packages
        if: contains(github.event.head_commit.message, '[Publish Packages]') || contains(github.event.inputs.command, '[Publish Packages]')

        steps:
            - uses: actions/checkout@v4
              with:
                  ref: dev=main
                  submodules: "true"

            - name: Checkout KitX SDK
              uses: actions/checkout@v4
              with:
                  repository: "Crequency/KitX-SDK"
                  ref: "dev=main"
                  path: "KitX SDK"
                  submodules: "true"

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: |
                      8.0.x

            - name: Initialize References
              run: |
                  dotnet tool install --global Cheese
                  cheese reference --setup

            - name: Add to GitHub Repo
              run: |
                  nuget sources add -name github -Source https://nuget.pkg.github.com/Crequency/index.json -Username Crequency -Password ${{ secrets.GitHubToken }}

            - name: Install NuGet
              uses: nuget/setup-nuget@v1
              with:
                  nuget-version: "6.x"

            - name: Build and Publish `Cheese`
              working-directory: "KitX SDK/Cheese"
              if: contains(github.event.head_commit.message, '[Cheese]') || contains(github.event.head_commit.message, '[All]') || contains(github.event.inputs.command, '[Cheese]') || contains(github.event.inputs.command, '[All]')
              run: |
                  dotnet build -c Release

                  nuget push ./bin/Release/*.nupkg -Source https://api.nuget.org/v3/index.json -SkipDuplicate -ApiKey ${{ secrets.NugetKey }} -NoSymbol
                  nuget push ./bin/Release/*.nupkg -Source github -SkipDuplicate

            - name: Build and Publish `KitX.Contract.CSharp`
              working-directory: "KitX Standard/KitX Contracts/KitX.Contract.CSharp"
              if: contains(github.event.head_commit.message, '[KitX.Contract.CSharp]') || contains(github.event.head_commit.message, '[All]') || contains(github.event.inputs.command, '[KitX.Contract.CSharp]') || contains(github.event.inputs.command, '[All]')
              run: |
                  dotnet build -c Release

                  nuget push ./bin/Release/*.nupkg -Source https://api.nuget.org/v3/index.json -SkipDuplicate -ApiKey ${{ secrets.NugetKey }} -NoSymbol
                  nuget push ./bin/Release/*.nupkg -Source github -SkipDuplicate

            - name: Build and Publish `KitX.Shared.CSharp`
              working-directory: "KitX Standard/KitX Shared/KitX.Shared.CSharp"
              if: contains(github.event.head_commit.message, '[KitX.Shared.CSharp]') || contains(github.event.head_commit.message, '[All]') || contains(github.event.inputs.command, '[KitX.Shared.CSharp]') || contains(github.event.inputs.command, '[All]')
              run: |
                  dotnet build -c Release

                  nuget push ./bin/Release/*.nupkg -Source https://api.nuget.org/v3/index.json -SkipDuplicate -ApiKey ${{ secrets.NugetKey }} -NoSymbol
                  nuget push ./bin/Release/*.nupkg -Source github -SkipDuplicate

            - name: Build and Publish `KitX.FileFormats.CSharp`
              working-directory: "KitX Standard/KitX File Formats/KitX.FileFormats.CSharp"
              if: contains(github.event.head_commit.message, '[KitX.FileFormats.CSharp]') || contains(github.event.head_commit.message, '[All]') || contains(github.event.inputs.command, '[KitX.FileFormats.CSharp]') || contains(github.event.inputs.command, '[All]')
              run: |
                  dotnet build -c Release

                  nuget push ./bin/Release/*.nupkg -Source https://api.nuget.org/v3/index.json -SkipDuplicate -ApiKey ${{ secrets.NugetKey }} -NoSymbol
                  nuget push ./bin/Release/*.nupkg -Source github -SkipDuplicate
